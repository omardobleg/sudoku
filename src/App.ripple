import { track, effect } from 'ripple';
import { Dialog } from './Dialog.ripple';
import { Watch } from './Watch.ripple';
import { Board } from './Board.ripple';
import { Square } from './Square.ripple';
import { Progress } from './Progress.ripple';
import { solveSudoku, createSudoku, stringifySudoku } from './helper.ripple';
import type { Difficulty } from './types.ts';
import { Config } from './context.ripple';

export component App() {
	const config = Config.get();
	const difficulty = track('easy' as Difficulty);
	const factory = track(() => createSudoku(difficulty, config.size));
	const difficulties = config.difficulty;
	const isSolved = track(false);
	const progress = track(() => {
		const unresolved = stringifySudoku(@factory.sudoku).split('-').length - 1;
		const solved = unresolved / 81;
		const indexSolved = 1 - solved;

		return indexSolved * 100;
	});
	effect(() => {
		@isSolved = solveSudoku(@factory.sudoku, @factory.solution);
	});

	<Dialog show={isSolved} />
	<div class='container text-center max-w-4xl mx-auto dark:bg-indigo-200'>
		<h1 class='mb-4 text-4xl font-extrabold leading-none tracking-tight text-indigo-900 md:text-5xl lg:text-6xl dark:text-white'>{'Welcome to Sudoku!'}</h1>
		<section class='flex justify-around items-baseline'>
			<aside class='w-64 flex justify-center items-baseline gap-2'>
				<label for='difficulty' class='block mb-2 text-base font-medium text-gray-900 dark:text-white'>{'Difficulty'}</label>
				<select class='block w-full px-4 py-3 text-base text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500' name='difficulty' id='difficulty' onChange={event => @difficulty = event.target.value}>for (let d of difficulties) {
					<option value={d}>{d}</option>
				}</select>
			</aside>
			<Watch start={@factory.startTime} />
		</section>
		<Progress progress={@progress} />
		<main class='m-auto'><Board sudoku={@factory.sudoku} solution={@factory.solution}>component children(props) {
			<Square {...props} />
		}</Board></main>
	</div>

	<style>
	  p {
			margin: 12px 0;
			font-family: "Arial", sans-serif;
		}
		  main {
			width: 800px;
			height: 800px;
		}
		  code {
			background: #f4f4f4;
			padding: 2px 6px;
			border-radius: 4px;
			font-family: "Courier New", monospace;
			color: #333;
		}
		  button {
			font-size: 1.5em;
			padding: 6px 12px;
			margin: 0 6px;
			cursor: pointer;
			border: none;
			font-family: "Courier New", monospace;
		}
		  button {
			background-color: #e0e0e0;
		}
		  .count {
			margin: 0 12px;
			font-size: 1.5em;
		}
	</style>
}