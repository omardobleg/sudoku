import type { Tracked } from 'ripple';
import type { Difficulty } from './types.ts';
type DifficultySelectorProps = { difficulty: Tracked<Difficulty>; difficulties: Difficulty[] };
export component DifficultySelector({ difficulty, difficulties }: DifficultySelectorProps) {
	<aside class='w-64 flex justify-center items-baseline gap-2'>
		<label for='difficulty' class='block mb-2 text-xl font-medium text-indigo-900 dark:text-white'>{'Difficulty'}</label>
		<select class='block w-full px-4 py-3 text-base text-indigo-900 border border-indigo-300 rounded-lg bg-indigo-50 focus:ring-indigo-500 focus:border-indigo-500 dark:bg-indigo-200 dark:border-indigo-600 dark:placeholder-indigo-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500 dark:outline-indigo-500 outline-indigo-500' name='difficulty' id='difficulty' onChange={event => @difficulty = event.target.value}>for (let d of difficulties) {
			<option value={d}>{d}</option>
		}</select>
	</aside>
}